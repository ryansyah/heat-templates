heat_template_version: 2015-10-15

description: |
  Create a single gluster server with an attached volume.

parameters:

  image:
    type: string
    label: Image name or ID
    description: Server image id to use
    default: CentOS 7 (PVHVM) (Orchestration)

  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: 1 GB General Purpose v1

  name:
    type: string
    label: server name
    description: hostname of the server
    default: c1n%index%

  key:
    type: string
    label: Key name
    description: Name of key-pair to be installed on the compute instance.
    default: my_key

  pubkey:
    type: string
    label: ssh public key
    description: Public key for instance interconnect.
    default: ''

  privkey:
    type: string
    label: ssh private key
    description: Private key for instance interconect.
    hidden: true
    default: ''

  volume_size:
    type: number
    description: Size of the cloud block storage device (brick) to be created.
    default: 75
    constraints:
    - range:
        min: 75
        max: 1024
      description: must be between 75 and 1024 GB.


resources:

  gluster_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }

  gluster_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      user_data_format: SOFTWARE_CONFIG
      user_data: |
        #!/bin/bash -x
        # setup Gluster SIG repo
        yum -y install centos-release-gluster38
        # install gluster, samba, lvm2
        yum -y install glusterfs-server samba lvm2
        # enable service
        systemctl enable glusterd.service
        # start service
        systemctl start glusterd.service
        # add open up ports on firewall
        firewall-cmd --zone=public --add-port=24007-24008/tcp --permanent
        # reload firewall rules
        firewall-cmd --reload

  volume_attachment_gluster:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: gluster_volume }
      instance_uuid: { get_resource: gluster_server }
      mountpoint: /dev/xvdc

  ssh_key_config:
    type: OS::Heat::SoftwareConfig
    properties:
      inputs:
      - name: ssh_priv
        default: { get_param: privkey }
      - name: ssh_pub
        default: { get_param: pubkey }
      group: script
      config: |
        #!/bin/bash
        logger "$0: Creating SSH keys..."
        mkdir -p /root/.ssh
        echo $ssh_priv > /root/.ssh/id_rsa
        sed -e 's|-----BEGIN RSA PRIVATE KEY-----|-----BEGIN_RSA_PRIVATE_KEY-----|' \
            -e 's|-----END RSA PRIVATE KEY-----|-----END_RSA_PRIVATE_KEY-----|' \
            -e 's| |\n|g' \
            -e 's|-----BEGIN_RSA_PRIVATE_KEY-----|-----BEGIN RSA PRIVATE KEY-----|' \
            -e 's|-----END_RSA_PRIVATE_KEY-----|-----END RSA PRIVATE KEY-----|' \
            -i /root/.ssh/id_rsa
        echo $ssh_pub > /root/.ssh/id_rsa.pub
        echo $ssh_pub > /root/.ssh/authorized_keys
        chmod 0644 /root/.ssh/id_rsa.pub
        chmod 0600 /root/.ssh/id_rsa
        chmod 0644 /root/.ssh/authorized_keys
        cat > /root/.ssh/config << __EOF
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null
        __EOF

  ssh_key_deploy:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: ssh_key_config
      server:
        get_resource: gluster_server

outputs:
  server_ip:
    value:
      get_attr: [gluster_server, accessIPv4]
